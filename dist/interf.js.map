{"version":3,"sources":["interf.js"],"names":["root","factory","define","amd","module","exports","interf","nodeName","Number","isInteger","VERSION","getProto","Object","getPrototypeOf","obj","__proto__","addArray","target","source","len","length","i","push","mergeObjects","destination","keys","Array","isArray","assignObjects","arguments","ret","getSymbols","getOwnPropertySymbols","hasProp","prototype","hasOwnProperty","_config","warn","debug","afterImplement","descriptor","configurable","writable","enumerable","callbacks","warnCallback","data","console","message","debugCallback","log","afterImplementCallback","classInterfaces","Class","interfaces","mixin","createInit","replace","notConfigurableNotWritableError","ignore","protoProps","staticProps","CAPITAL_CHARS","split","parentHas","Interface","constructor","__interfaces_","has","InterfaceClass","properties","extends","TypeError","name","indexOf","this","Error","isInterfaceOf","object","create","interfaceName","extendsArray","ar","Interfaces","version","collection","add","constructorName","j","remove","splice","extendsHas","configure","debugs","defineInterfacesProp","proto","parent","options","value","set","defineProperty","validateInterfaces","implementIn","call","implement","removeIn","missed","deleted","success","interfaced","index","warnMsg","map","join","emptyIn","empty","resolveArgs","args","section","values","targetProto","in","opts","utils","internal","MixinsInitiable","Comments","Methods","StaticProperties","Docs","DebugInterfaces","tree","initTree","list","initList","interfs","unshift","addInfo","extended","InterFace","info","asExtendedInterface","result","interface","implementedIn","getDuplicates","results","getList","getTree","operation","Constructor","allInterfaces","stillExist","interfacesList","listLen","listednterface","mixProperties","debugData","isPrototype","notReplaced","getOwnPropsKeys","getOwnPropertyNames","implementByMixIn","defineProps","mixinNames","targetNames","ignoredNames","replaced","defined","writed","getOwnPropertyDescriptor","__mixins_","mixins","isProto","targetDescriptor","error","e","createInitMixins","initMixins","mixinObject","Function","bind","apply","mixIn","targetPrototype","mixinsConstructors","mixinProto","debugIn","actions","information","debugInfo","duplicates","action","allActions","mix"],"mappings":"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","file":"interf.js","sourcesContent":["/**\n * @license\n * Interf <https://shvabuk.github.io/interf>\n * Released under MIT license <https://shvabuk.github.io/interf/LICENSE.txt>\n * Copyright Shvab Ostap\n */\n;((root, factory) => {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node.\n    const interf = factory();\n    module.exports = interf;\n    // CommonJS exports\n    module.exports.interf = interf;\n  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    exports.interf = factory();\n  } else if (typeof root.interf !== 'object' || !Number.isInteger(root.interf.VERSION)) {\n    root.interf = factory();\n  }\n})(this, () => {\n  'use strict';\n  // ------------------------------------------------------------------------\n  // utils block start\n\n  // get object prototype\n  const getProto = Object.getPrototypeOf || (obj => obj.__proto__);\n  // add source array values to target array, source array values may be arguments object (is array like)\n  const addArray = (target, source) => {\n    const len = source.length;\n    let i = -1;\n    while (++i < len) {\n      target.push(source[i]);\n    }\n    return target;\n  };\n  // merge source object values in target object recursively, arrays merged by addArray\n  const mergeObjects = (target, source) => {\n    const destination = target;\n    const keys = Object.keys(source);\n    let i = keys.length;\n    while (i--) {\n      if (Array.isArray(source[keys[i]])) {\n        if (Array.isArray(destination[keys[i]])) {\n          // append array\n          destination[keys[i]] = addArray(destination[keys[i]], source[keys[i]]);\n        } else {\n          // create new array\n          destination[keys[i]] = addArray([], source[keys[i]]);\n        }\n      } else if (typeof source[keys[i]] === 'object') {\n        if (typeof destination[keys[i]] === 'object') {\n          // mutate destination[key]\n          destination[keys[i]] = mergeObjects(destination[keys[i]], source[keys[i]]);\n        } else {\n          // merge source[key] to new object\n          destination[keys[i]] = mergeObjects({}, source[keys[i]]);\n        }\n      } else {\n        destination[keys[i]] = source[keys[i]];\n      }\n    }\n\n    return destination;\n  };\n  // merge objects values in new obj, arrays merged\n  function assignObjects() {\n    const len = arguments.length;\n    let i = -1;\n    let ret = {};\n    while (++i < len) {\n      ret = mergeObjects(ret, arguments[i]);\n    }\n    return ret;\n  }\n\n  // get symbols, if method not provided, will return empty array, needed for getOwnPropsKeys\n  const getSymbols = Object.getOwnPropertySymbols || (() => []);\n\n  // utils block end\n  // ------------------------------------------------------------------------\n\n  // has own property check, usage: has.call(obj, 'propName');\n  const hasProp = Object.prototype.hasOwnProperty;\n\n  // main object\n  const interf = {\n    // integer count of all versions, current version: 1.0.0\n    VERSION: 1,\n    _config: {\n      // use interf.configure to set config values\n      warn: false,\n      debug: false, // ignored in core build\n      afterImplement: false,\n      descriptor: {\n        // value: (auto-defined, in case when setter is defined will be auto-assigned),\n        configurable: true,\n        writable: false,\n        enumerable: false,\n        // set: undefined,\n        // get: undefined,\n      },\n      callbacks: {\n        warn: function warnCallback(data) {\n          if (typeof console === 'object' && console.warn) console.warn(data.message);\n        },\n        // ignored in core build\n        debug: function debugCallback(data) {\n          if (typeof console === 'object' && console.log) console.log(data.message, data);\n        },\n        afterImplement: function afterImplementCallback(classInterfaces, Class, interfaces) {},\n      },\n      // ignored in core build\n      mixin: {\n        // warn: this.,\n        // debug: false,\n        createInit: true, // create initMixins method in target prototype\n        interfaces: true,\n        replace: true,\n        notConfigurableNotWritableError: true, // ignored if replace == false,\n        // https://developer.mozilla.org/uk/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\n        ignore: {\n          protoProps: [\n            'constructor',\n            'apply',\n            'bind',\n            'call',\n            'isGenerator',\n            'toSource',\n            'toString',\n            '__proto__',\n          ],\n          staticProps: [\n            'arguments',\n            'arity',\n            'caller',\n            'length',\n            'name',\n            'displayName',\n            'prototype',\n            '__proto__',\n          ],\n        },\n      },\n    },\n  };\n\n  const CAPITAL_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\n  function parentHas(target, Interface) {\n    const prototype = getProto(target);\n    if (prototype === null) return false;\n    const interfaces = prototype.constructor.__interfaces_;\n    if (typeof interfaces !== 'undefined' && interfaces.has(Interface)) return true;\n    return parentHas(prototype, Interface);\n  }\n\n  // Base interface class\n  const InterfaceClass = class Interface {\n    constructor(properties) {\n      if (typeof properties.extends !== 'undefined' && !Array.isArray(properties.extends)) {\n        throw TypeError('Interface extends should be an Array');\n      }\n      if (typeof properties.name === 'string' && properties.name.length !== 0) {\n        const keys = Object.keys(properties);\n        let i = keys.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (i--) {\n          if (\n            CAPITAL_CHARS.indexOf(keys[i][0]) > -1 ||\n            keys[i] === 'name' ||\n            keys[i] === 'extends'\n          ) {\n            this[keys[i]] = properties[keys[i]];\n          } else {\n            throw Error('Interface optional property name should start with capital letter');\n          }\n        }\n      } else {\n        throw TypeError('Interface should have a name');\n      }\n    }\n\n    isInterfaceOf(object) {\n      // code repeating here, same as in parentHas()\n      // those solulution works faster than just using of parentHas()\n      // TODO: check in others environments\n      const prototype = getProto(object);\n      if (prototype === null) return false;\n      const interfaces = prototype.constructor.__interfaces_;\n      if (typeof interfaces !== 'undefined' && interfaces.has(this)) return true;\n      return parentHas(prototype, this);\n    }\n  };\n\n  // interf.create(), create Interface\n  function create(interfaceName, extendsArray) {\n    // no need in rest args (...args), also minimize code (babel will transform it\n    // to arguments anyway)\n    const ar = arguments;\n    if (typeof ar[0] === 'string') {\n      const obj = { name: ar[0] };\n      if (typeof ar[1] !== 'undefined') obj.extends = ar[1];\n      return new InterfaceClass(obj);\n    } else if (typeof ar[0] === 'object') {\n      return new InterfaceClass(ar[0]);\n    }\n    throw TypeError(\n      'In method interf.create first parameter should be an object or Interface name'\n    );\n  }\n\n  // Interfaces objects are stored in __interfaces_\n  class Interfaces {\n    constructor(version) {\n      this.collection = [];\n      this.VERSION = version;\n    }\n\n    // add only unique, but not unique in extends or parent\n    // mainly incoming parameter will be arguments object (array like)\n    add(interfaces, constructorName) {\n      const len = interfaces.length;\n      let i = -1;\n      while (++i < len) {\n        let j = this.collection.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (j--) {\n          if (this.collection[j] === interfaces[i]) {\n            throw Error(\n              `Class ${constructorName} cannot implement previously implemented interface ${interfaces[\n                i\n              ].name}`\n            );\n          }\n        }\n\n        this.collection.push(interfaces[i]);\n      }\n      return this;\n    }\n\n    remove(Interface) {\n      let i = this.collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === this.collection[i]) {\n          this.collection.splice(i, 1);\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // check instance interfaces\n    // comparison is fastest solution\n    has(Interface) {\n      let i = this.collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === this.collection[i]) return true;\n        // check extended interfaces\n        if (\n          typeof this.collection[i].extends === 'object' &&\n          this.extendsHas(Interface, this.collection[i].extends)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    extendsHas(Interface, collection) {\n      let i = collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === collection[i]) return true;\n        // check extended interfaces\n        if (\n          typeof collection[i].extends !== 'undefined' &&\n          this.extendsHas(Interface, collection[i].extends)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  function configure(properties) {\n    this._config = assignObjects(this._config, properties);\n\n    // descriptor should be rewrited\n    if (typeof properties.descriptor === 'object') {\n      this._config.descriptor = properties.descriptor;\n    }\n\n    return this;\n  }\n\n  // debug information computing functions\n  let debugs = false;\n\n  // define __interfaces_ in prototype\n  function defineInterfacesProp(proto, parent, options) {\n    const value = new Interfaces(interf.version, parent);\n    const descriptor = assignObjects(options.descriptor); // assign to empty object {}\n\n    if (typeof interf._config.descriptor.set !== 'function') {\n      descriptor.value = value;\n    }\n\n    Object.defineProperty(proto.constructor, '__interfaces_', descriptor);\n    if (typeof descriptor.set === 'function') {\n      proto.constructor.__interfaces_ = value;\n    }\n\n    if (options.debug && debugs) debugs.define(true, proto, value);\n  }\n\n  function validateInterfaces(interfaces) {\n    let i = interfaces.length;\n    while (i--) {\n      if (typeof interfaces[i] !== 'object') {\n        throw TypeError(`Undefined type ${typeof interfaces[i]} of interface`);\n      } else if (typeof interfaces[i].isInterfaceOf !== 'function') {\n        throw TypeError(`Undefined type of interface: ${interfaces[i].name}`);\n      }\n    }\n  }\n\n  // implement interface function\n  function implementIn(prototype, interfaces, options) {\n    validateInterfaces(interfaces);\n\n    const constructor = prototype.constructor;\n\n    if (!hasProp.call(constructor, '__interfaces_')) {\n      defineInterfacesProp(prototype, null, options);\n    }\n\n    // add intefaces to prototype\n    constructor.__interfaces_.add(interfaces, constructor.name);\n\n    if (interf._config.afterImplement) {\n      interf._config.callbacks.afterImplement(constructor.__interfaces_, constructor, interfaces);\n    }\n\n    if (options.debug && debugs) debugs.implement(true, prototype, interfaces);\n\n    return constructor;\n  }\n\n  // remove function\n  function removeIn(prototype, interfaces, options) {\n    validateInterfaces(interfaces);\n\n    const constructor = prototype.constructor;\n    const missed = [];\n    const deleted = [];\n    let collection;\n    let success = false;\n    let interfaced = false;\n    if (hasProp.call(constructor, '__interfaces_')) {\n      collection = constructor.__interfaces_.collection;\n\n      let i = interfaces.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        const index = collection.indexOf(interfaces[i]);\n        let warnMsg = '';\n\n        if (index > -1) {\n          if (constructor.__interfaces_.remove(interfaces[i])) {\n            deleted.push(interfaces[i]);\n\n            if (constructor.__interfaces_.has(interfaces[i])) {\n              warnMsg = `removed, but interface still exist in other interfaces parents.`;\n            }\n\n            if (parentHas(prototype, interfaces[i])) {\n              warnMsg += ` removed, but interface still exist in parents prototypes constructors interfaces.`;\n            }\n          } else {\n            warnMsg = `not removed from own interfaces.`;\n          }\n        } else {\n          warnMsg = `not found in own interfaces.`;\n\n          missed.push(interfaces[i]);\n        }\n\n        if (options.warn && warnMsg.length > 0) {\n          interf._config.callbacks.warn({\n            message: `Constructor ${constructor.name}. Interface ${interfaces[i]\n              .name} was ${warnMsg}`,\n          });\n        }\n      }\n\n      success = deleted.length === interfaces.length;\n\n      interfaced = true;\n    } else if (options.warn) {\n      interf._config.callbacks.warn({\n        message: `Constructor ${constructor.name} none interface was found. Interfaces ${addArray(\n          [],\n          interfaces\n        )\n          .map(Interface => Interface.name)\n          .join(', ')} was not removed from own interfaces.`,\n      });\n    }\n\n    if (options.debug && debugs) {\n      debugs.remove(success, prototype, interfaces, interfaced, deleted, missed);\n    }\n\n    return success;\n  }\n\n  // empty function\n  function emptyIn(prototype, options) {\n    const constructor = prototype.constructor;\n    let success = false;\n    let interfaced = false;\n    if (hasProp.call(constructor, '__interfaces_')) {\n      // create new array\n      const interfaces = addArray([], constructor.__interfaces_.collection);\n      if (interfaces.length !== 0) {\n        success = removeIn(prototype, interfaces, options);\n      }\n\n      interfaced = true;\n    }\n\n    if (options.debug && debugs) debugs.empty(success, prototype, null, interfaced);\n\n    return success;\n  }\n\n  // resolve input arguments\n  function resolveArgs(args, section) {\n    const ret = { values: args, options: {} };\n    let descriptor;\n    if (Array.isArray(args[0])) {\n      ret.values = args[0];\n      if (typeof args[1] === 'object') {\n        ret.options = args[1];\n        if (typeof ret.options.descriptor === 'object') {\n          descriptor = ret.options.descriptor;\n        }\n      }\n    }\n\n    if (typeof section === 'string') {\n      ret.options = assignObjects(interf._config, interf._config[section], ret.options);\n    } else {\n      ret.options = assignObjects(interf._config, ret.options);\n    }\n\n    // special rule for descriptor option\n    // descriptor should be rewrited\n    if (typeof descriptor !== 'undefined') {\n      ret.options.descriptor = descriptor;\n    }\n\n    return ret;\n  }\n\n  // get proto of given in \".in(target)\" method argument\n  function targetProto(target) {\n    if (typeof target === 'function') {\n      return target.prototype;\n    } else if (\n      // check is protolike object\n      typeof target.constructor === 'function' &&\n      target.constructor.prototype === target\n    ) {\n      return target;\n    }\n    throw TypeError(\n      `Wrong target, should be function (class) or prototype of function (class). Current value: ${target}.`\n    );\n  }\n\n  // interf.implement()\n  function implement() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments);\n    return {\n      in: target => implementIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // interf.remove()\n  function remove() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments);\n    return {\n      in: target => removeIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // interf.empty()\n  function empty(options) {\n    const opts = resolveArgs([[], options]).options;\n    return {\n      in: target => emptyIn(targetProto(target), opts),\n    };\n  }\n\n  // core\n  interf.create = create;\n  interf.implement = implement;\n  interf.remove = remove;\n  interf.empty = empty;\n  interf.configure = configure;\n  // core additional\n  interf.utils = {\n    getProto,\n    getSymbols,\n    addArray,\n    mergeObjects,\n    assignObjects,\n  };\n  interf.internal = {\n    Interface: InterfaceClass,\n    Interfaces,\n    implementIn,\n    removeIn,\n    emptyIn,\n    debugs,\n    resolveArgs,\n    targetProto,\n  };\n\n  // @NOT_CORE_BEGIN@\n\n  // Interface for objects mixined with classes with constructor method, and mark that initMixins method are able\n  const MixinsInitiable = create({\n    name: 'MixinsInitiable',\n    Comments: ['Class with this interface may init values provided by mixins'],\n    Methods: ['initMixins'],\n    StaticProperties: ['__mixins_: class[]'],\n    Docs: '//shvabuk.github.io/interf',\n  });\n\n  // class for getting debug information\n  class DebugInterfaces {\n    constructor(prototype) {\n      this.tree = [];\n      this.initTree(prototype);\n      this.list = [];\n      this.initList();\n    }\n\n    // use proto chain here because we need proto info, that may not provided by parent property\n    initTree(prototype) {\n      let proto = prototype;\n      while (true) {\n        if (proto === null) {\n          break;\n        }\n\n        if (hasProp.call(proto.constructor, '__interfaces_')) {\n          const interfs = proto.constructor.__interfaces_.collection;\n          this.tree.unshift({\n            constructorName: proto.constructor.name,\n            proto,\n            interfaces: interfs,\n          });\n        }\n\n        proto = getProto(proto);\n      }\n      return this.tree;\n    }\n\n    initList() {\n      const len = this.tree.length;\n      let i = -1;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (++i < len) {\n        this.addInfo(\n          this.tree[i].proto,\n          this.tree[i].interfaces,\n          this.tree[i].constructorName,\n          false\n        );\n      }\n      return this.list;\n    }\n\n    addInfo(proto, collection, constructorName, extended) {\n      const len = collection.length;\n      let i = -1;\n      while (++i < len) {\n        const InterFace = collection[i];\n        const info = { constructorName, asExtendedInterface: extended, proto };\n        let result;\n        let j = this.list.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (j--) {\n          if (this.list[j].interface === InterFace) {\n            result = this.list[j];\n            break;\n          }\n        }\n        if (typeof result === 'undefined') {\n          this.list.push({ interface: InterFace, implementedIn: [info] });\n        } else {\n          result.implementedIn.push(info);\n        }\n\n        if (typeof InterFace.extends !== 'undefined') {\n          this.addInfo(proto, InterFace.extends, constructorName, true);\n        }\n      }\n      return this.list;\n    }\n\n    getDuplicates() {\n      const results = [];\n\n      const len = this.list.length;\n      let i = -1;\n      while (++i < len) {\n        if (this.list[i].implementedIn.length > 1) results.push(this.list[i]);\n      }\n\n      return results;\n    }\n\n    getList() {\n      return this.list;\n    }\n\n    getTree() {\n      return this.tree;\n    }\n  }\n\n  debugs = {\n    define: (success, proto, value) => {\n      interf._config.callbacks.debug({\n        operation: 'define',\n        success,\n        message: `Constructor ${proto.constructor.name} prototype property __interfaces_ defined`,\n        value,\n        Constructor: proto.constructor,\n      });\n    },\n    implement: (success, proto, value) => {\n      const allInterfaces = new DebugInterfaces(proto).getList();\n      interf._config.callbacks.debug({\n        operation: 'implement',\n        success,\n        message: `Constructor ${proto.constructor\n          .name} implemented own interfaces: ${proto.constructor.__interfaces_.collection\n          .map(InterFace => InterFace.name)\n          .join(', ')}. All ${proto.constructor.name} interfaces: ${allInterfaces\n          .map(data => data.interface.name)\n          .join(', ')}`,\n        value,\n        allInterfaces,\n        Constructor: proto.constructor,\n      });\n    },\n    remove: (success, proto, interfs, interfaced, deleted, missed) => {\n      if (interfaced) {\n        const stillExist = [];\n        const interfacesList = new DebugInterfaces(proto).getList();\n        const listLen = interfacesList.length;\n        let i = -1;\n        while (++i < listLen) {\n          const len = interfs.length;\n          let j = -1;\n          while (++j < len) {\n            if (interfacesList[i].interface === interfs[j]) {\n              stillExist.push(interfacesList[i]);\n              break;\n            }\n          }\n        }\n\n        const data = {\n          operation: 'remove',\n          success,\n          message: `Constructor ${proto.constructor.name}.${(deleted.length > 0\n            ? ` Own interfaces: ${deleted.map(InterFace => InterFace.name).join(', ')} was deleted.`\n            : '') +\n            (missed.length > 0\n              ? ` Own interfaces: ${missed\n                  .map(InterFace => InterFace.name)\n                  .join(', ')} was not found in ${proto.constructor.name} interfaces collection.`\n              : '') +\n            (stillExist.length > 0\n              ? ` Interfaces: ${stillExist\n                  .map(listednterface => listednterface.interface.name)\n                  .join(', ')} still exist in parents constructor prototypes or parents interfaces.`\n              : '')}`,\n          value: interfs,\n          Constructor: proto.constructor,\n          deleted,\n          missed,\n          stillExist,\n          list: interfacesList,\n        };\n\n        interf._config.callbacks.debug(data);\n      } else {\n        interf._config.callbacks.debug({\n          operation: 'remove',\n          success,\n          message: `Constructor ${proto.constructor\n            .name} does not implement interf interfaces. Interface removing is not possible`,\n          value: interfs,\n          Constructor: proto.constructor,\n        });\n      }\n    },\n    empty: (success, proto, value, interfaced) => {\n      if (interfaced) {\n        interf._config.callbacks.debug({\n          operation: 'empty',\n          success,\n          message: `Constructor ${proto.constructor.name} empty ${success\n            ? ''\n            : 'not '}all own interfaces`,\n          value,\n          Constructor: proto.constructor,\n        });\n      } else {\n        interf._config.callbacks.debug({\n          operation: 'empty',\n          success: false,\n          message: `Constructor ${proto.constructor\n            .name} does not implement interf interfaces. Interface empty is not possible`,\n          value,\n          Constructor: proto.constructor,\n        });\n      }\n    },\n    mixProperties: (success, target, mixin, debugData) => {\n      const data = debugData;\n      const isPrototype = typeof target !== 'function';\n      data.success = success;\n      data.Constructor = isPrototype ? target.constructor : target;\n      data.message = `Constructor ${data.Constructor.name +\n        (isPrototype ? ' prototype' : '')} mixed with ${(isPrototype\n        ? mixin.constructor.name\n        : mixin.name) + (isPrototype ? ' prototype' : '')} properties.${data.notReplaced.length > 0\n        ? ` Not replaced properties: ${data.notReplaced.join(', ')}`\n        : ''}`;\n\n      data.value = mixin;\n      interf._config.callbacks.debug(data);\n    },\n  };\n\n  // get props names, used in mixin\n  function getOwnPropsKeys(target) {\n    return addArray(Object.getOwnPropertyNames(target), getSymbols(target));\n  }\n\n  function implementByMixIn(target, interfaces, options) {\n    const prototype = targetProto(target);\n    // create new array, transform arguments to array\n    const interfs = addArray([], interfaces);\n\n    let i = interfs.length;\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      // ignore duplicates\n      if (\n        hasProp.call(prototype.constructor, '__interfaces_') &&\n        prototype.constructor.__interfaces_.collection.indexOf(interfs[i]) > -1\n      ) {\n        interfs.splice(i, 1);\n      }\n    }\n\n    return implementIn(prototype, interfs, options);\n  }\n\n  // define mixin (constructor or prototype) properties\n  function defineProps(target, mixin, options, ignore) {\n    const mixinNames = getOwnPropsKeys(mixin);\n    const targetNames = getOwnPropsKeys(target);\n    const debugData = {\n      operation: 'mixProperties',\n      target,\n      mixin,\n      ignoredNames: [],\n      notReplaced: [],\n      replaced: [],\n      defined: [],\n      writed: [],\n    };\n\n    let i = mixinNames.length;\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      // ignore props from ignorelist\n      if (ignore.indexOf(mixinNames[i]) > -1) {\n        if (options.debug) debugData.ignoredNames.push(mixinNames[i]);\n        continue;\n      }\n      // implement interfaces\n      if (mixinNames[i] === '__interfaces_') {\n        if (options.interfaces) {\n          implementByMixIn(target, mixin.__interfaces_.collection, options);\n          if (options.debug) debugData.interfaces = mixin.__interfaces_.collection;\n        }\n        continue;\n      }\n\n      const descriptor = Object.getOwnPropertyDescriptor(mixin, mixinNames[i]);\n      // check prop name in target\n      if (targetNames.indexOf(mixinNames[i]) > -1) {\n        // add mixins constructors if exists\n        if (mixinNames[i] === '__mixins_') {\n          addArray(target.__mixins_, mixin.__mixins_);\n          if (options.debug) debugData.mixins = mixin.__mixins_;\n        } else {\n          const isProto = typeof target === 'object';\n\n          if (options.warn) {\n            interf._config.callbacks.warn({\n              message: `Target ${isProto\n                ? `${target.constructor.name} prototype`\n                : target.name} alredy have mixin (${isProto\n                ? `${mixin.constructor.name} prototype`\n                : mixin.name}) property \"${mixinNames[i]}\". Will be ${options.replace\n                ? 'replaced'\n                : 'ignored'}.`,\n            });\n          }\n\n          if (options.replace) {\n            // resolve conflicts\n            const targetDescriptor = Object.getOwnPropertyDescriptor(target, mixinNames[i]);\n            if (!targetDescriptor.configurable) {\n              if (targetDescriptor.writable) {\n                // write property\n                target[mixinNames[i]] = mixin[mixinNames[i]];\n                if (options.debug) debugData.writed.push(mixinNames[i]);\n              } else if (options.notConfigurableNotWritableError) {\n                try {\n                  // show some additional info\n                  console.error(\n                    'Trying to define not configurable and not writable value. Interf mixin debug info',\n                    debugData\n                  );\n                } catch (e) {}\n                // force error throwing\n                Object.defineProperty(target, mixinNames[i], descriptor);\n              } else {\n                // ignore if options.notConfigurableNotWritableError = false and targetDescriptor.configurable true\n                if (options.debug) debugData.notReplaced.push(mixinNames[i]);\n                if (options.warn) {\n                  interf._config.callbacks.warn({\n                    message: `Mixin ${isProto\n                      ? `${mixin.constructor.name} prototype`\n                      : mixin.name} property \"${mixinNames[\n                      i\n                    ]}\" ignored, because is not writable and not configurable`,\n                  });\n                }\n              }\n            } else {\n              // replace value\n              Object.defineProperty(target, mixinNames[i], descriptor);\n              if (options.debug) debugData.replaced.push(mixinNames[i]);\n            }\n          } else if (options.debug) {\n            // ignore if options.replace == false\n            debugData.notReplaced.push(mixinNames[i]);\n          }\n        }\n      } else {\n        // define property\n        Object.defineProperty(target, mixinNames[i], descriptor);\n        if (options.debug) debugData.defined.push(mixinNames[i]);\n      }\n    }\n\n    if (options.debug && debugs) debugs.mixProperties(true, target, mixin, debugData);\n  }\n\n  // return initMixins function, MixinsInitiable objects method\n  // may be used if interf._config.mixin.createInit or options.createInit is true\n  function createInitMixins(replace) {\n    return function initMixins() {\n      // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n      let prototype = getProto(this);\n      while (true) {\n        if (prototype === null) {\n          break;\n        }\n\n        if (hasProp.call(prototype.constructor, '__mixins_')) {\n          const length = prototype.constructor.__mixins_.length;\n          let j = -1;\n          while (++j < length) {\n            // const mixinObject = new prototype.constructor.__mixins_[j](...args);\n            // compiled by babel\n            const mixinObject = new (Function.prototype.bind.apply(\n              prototype.constructor.__mixins_[j],\n              addArray([null], arguments)\n            ))();\n            const keys = Object.keys(mixinObject);\n            let i = keys.length;\n            // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n            while (i--) {\n              if (typeof this[keys[i]] === 'undefined' || replace) {\n                this[keys[i]] = mixinObject[keys[i]];\n              }\n            }\n          }\n        }\n\n        prototype = getProto(prototype);\n      }\n    };\n  }\n\n  // mixin function\n  function mixIn(targetPrototype, mixins, options) {\n    const mixinsConstructors = [];\n    const len = mixins.length;\n    let i = -1;\n    while (++i < len) {\n      const mixinProto = targetProto(mixins[i]);\n      defineProps(targetPrototype, mixinProto, options, options.ignore.protoProps);\n      defineProps(\n        targetPrototype.constructor,\n        mixinProto.constructor,\n        options,\n        options.ignore.staticProps\n      );\n      if (options.createInit) mixinsConstructors.push(mixinProto.constructor);\n    }\n\n    if (options.createInit) {\n      if (\n        typeof targetPrototype.__interfaces_ === 'undefined' ||\n        !targetPrototype.__interfaces_.has(MixinsInitiable)\n      ) {\n        Object.defineProperty(targetPrototype, 'initMixins', {\n          configurable: true,\n          writable: true,\n          value: createInitMixins(!!options.replace), // always convert replace to primitive\n        });\n\n        if (\n          typeof targetPrototype.constructor.__interfaces_ !== 'object' ||\n          targetPrototype.constructor.__interfaces_.collection.indexOf(MixinsInitiable) === -1\n        ) {\n          implement(MixinsInitiable).in(targetPrototype);\n        }\n      }\n\n      if (hasProp.call(targetPrototype.constructor, '__mixins_')) {\n        addArray(targetPrototype.constructor.__mixins_, mixinsConstructors);\n      } else {\n        Object.defineProperty(targetPrototype.constructor, '__mixins_', {\n          configurable: true,\n          writable: true,\n          value: mixinsConstructors,\n        });\n      }\n    }\n\n    return targetPrototype.constructor;\n  }\n\n  // debug function\n  function debugIn(prototype, actions) {\n    const information = {};\n    let i = actions.length;\n    const debugInfo = new DebugInterfaces(prototype);\n\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      if (actions[i] === 'duplicates') {\n        information.duplicates = debugInfo.getDuplicates();\n      } else if (actions[i] === 'tree') {\n        information.tree = debugInfo.getTree();\n      } else if (actions[i] === 'list') {\n        information.list = debugInfo.getList();\n      }\n    }\n\n    return information;\n  }\n\n  // interf.debug() resolve given arguments and run debug\n  function debug(action) {\n    const allActions = ['duplicates', 'tree', 'list'];\n    let values;\n    if (typeof action === 'undefined') {\n      values = allActions;\n    } else if (typeof action === 'string') {\n      if (action === 'all') {\n        values = allActions;\n      } else {\n        values = [action];\n      }\n    } else if (Array.isArray(action)) {\n      values = action;\n    } else {\n      throw TypeError(\n        `debug first argument should be undefined, array, or string (${allActions.join(', ')}, all)`\n      );\n    }\n\n    return {\n      in: target => debugIn(targetProto(target), values),\n    };\n  }\n\n  // interf.mix()\n  function mix() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments, 'mixin');\n\n    return {\n      in: target => mixIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // full\n  interf.mix = mix;\n  interf.debug = debug;\n  // additional\n  interf.interfaces = { MixinsInitiable };\n  interf.internal.DebugInterfaces = DebugInterfaces;\n  interf.internal.mixIn = mixIn;\n  interf.internal.debugIn = debugIn;\n  interf.internal.debugs = debugs;\n\n  // @NOT_CORE_END@\n\n  return interf;\n});\n"]}