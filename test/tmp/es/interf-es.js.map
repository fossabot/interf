{"version":3,"sources":["interf.js"],"names":["root","factory","define","amd","module","exports","interf","nodeName","Number","isInteger","VERSION","getProto","Object","getPrototypeOf","obj","__proto__","addArray","target","source","len","length","i","push","mergeObjects","destination","keys","Array","isArray","assignObjects","arguments","ret","getSymbols","getOwnPropertySymbols","hasProp","prototype","hasOwnProperty","_config","warn","debug","afterImplement","descriptor","configurable","writable","enumerable","callbacks","warnCallback","data","console","message","debugCallback","log","afterImplementCallback","classInterfaces","Class","interfaces","mixin","createInit","replace","notConfigurableNotWritableError","ignore","protoProps","staticProps","CAPITAL_CHARS","split","parentHas","Interface","constructor","__interfaces_","has","InterfaceClass","properties","extends","TypeError","name","indexOf","Error","isInterfaceOf","object","create","interfaceName","extendsArray","ar","Interfaces","version","collection","add","constructorName","j","remove","splice","extendsHas","configure","debugs","defineInterfacesProp","proto","parent","options","value","set","defineProperty","validateInterfaces","implementIn","call","implement","removeIn","missed","deleted","success","interfaced","index","warnMsg","map","join","emptyIn","empty","resolveArgs","args","section","values","targetProto","in","opts","utils","internal","MixinsInitiable","Comments","Methods","StaticProperties","Docs","DebugInterfaces","tree","initTree","list","initList","interfs","unshift","addInfo","extended","InterFace","info","asExtendedInterface","result","interface","implementedIn","getDuplicates","results","getList","getTree","operation","Constructor","allInterfaces","stillExist","interfacesList","listLen","listednterface","mixProperties","debugData","isPrototype","notReplaced","getOwnPropsKeys","getOwnPropertyNames","implementByMixIn","defineProps","mixinNames","targetNames","ignoredNames","replaced","defined","writed","getOwnPropertyDescriptor","__mixins_","mixins","isProto","targetDescriptor","error","e","createInitMixins","initMixins","mixinObject","Function","bind","apply","mixIn","targetPrototype","mixinsConstructors","mixinProto","debugIn","actions","information","debugInfo","duplicates","action","allActions","mix"],"mappings":"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","file":"interf-es.js","sourcesContent":["/**\n * @license\n * Interf <https://shvabuk.github.io/interf>\n * Released under MIT license <https://shvabuk.github.io/interf/LICENSE.txt>\n * Copyright Shvab Ostap\n */\n;((root, factory) => {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node.\n    const interf = factory();\n    module.exports = interf;\n    // CommonJS exports\n    module.exports.interf = interf;\n  } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n    // CommonJS\n    exports.interf = factory();\n  } else if (typeof root.interf !== 'object' || !Number.isInteger(root.interf.VERSION)) {\n    root.interf = factory();\n  }\n})(this, () => {\n  \n  // ------------------------------------------------------------------------\n  // utils block start\n\n  // get object prototype\n  const getProto = Object.getPrototypeOf || (obj => obj.__proto__);\n  // add source array values to target array, source array values may be arguments object (is array like)\n  const addArray = (target, source) => {\n    const len = source.length;\n    let i = -1;\n    while (++i < len) {\n      target.push(source[i]);\n    }\n    return target;\n  };\n  // merge source object values in target object recursively, arrays merged by addArray\n  const mergeObjects = (target, source) => {\n    const destination = target;\n    const keys = Object.keys(source);\n    let i = keys.length;\n    while (i--) {\n      if (Array.isArray(source[keys[i]])) {\n        if (Array.isArray(destination[keys[i]])) {\n          // append array\n          destination[keys[i]] = addArray(destination[keys[i]], source[keys[i]]);\n        } else {\n          // create new array\n          destination[keys[i]] = addArray([], source[keys[i]]);\n        }\n      } else if (typeof source[keys[i]] === 'object') {\n        if (typeof destination[keys[i]] === 'object') {\n          // mutate destination[key]\n          destination[keys[i]] = mergeObjects(destination[keys[i]], source[keys[i]]);\n        } else {\n          // merge source[key] to new object\n          destination[keys[i]] = mergeObjects({}, source[keys[i]]);\n        }\n      } else {\n        destination[keys[i]] = source[keys[i]];\n      }\n    }\n\n    return destination;\n  };\n  // merge objects values in new obj, arrays merged\n  function assignObjects() {\n    const len = arguments.length;\n    let i = -1;\n    let ret = {};\n    while (++i < len) {\n      ret = mergeObjects(ret, arguments[i]);\n    }\n    return ret;\n  }\n\n  // get symbols, if method not provided, will return empty array, needed for getOwnPropsKeys\n  const getSymbols = Object.getOwnPropertySymbols || (() => []);\n\n  // utils block end\n  // ------------------------------------------------------------------------\n\n  // has own property check, usage: has.call(obj, 'propName');\n  const hasProp = Object.prototype.hasOwnProperty;\n\n  // main object\n  const interf = {\n    // integer count of all versions, current version: 1.0.0\n    VERSION: 1,\n    _config: {\n      // use interf.configure to set config values\n      warn: false,\n      debug: false, // ignored in core build\n      afterImplement: false,\n      descriptor: {\n        // value: (auto-defined, in case when setter is defined will be auto-assigned),\n        configurable: true,\n        writable: false,\n        enumerable: false,\n        // set: undefined,\n        // get: undefined,\n      },\n      callbacks: {\n        warn: function warnCallback(data) {\n          if (typeof console === 'object' && console.warn) console.warn(data.message);\n        },\n        // ignored in core build\n        debug: function debugCallback(data) {\n          if (typeof console === 'object' && console.log) console.log(data.message, data);\n        },\n        afterImplement: function afterImplementCallback(classInterfaces, Class, interfaces) {},\n      },\n      // ignored in core build\n      mixin: {\n        // warn: this.,\n        // debug: false,\n        createInit: true, // create initMixins method in target prototype\n        interfaces: true,\n        replace: true,\n        notConfigurableNotWritableError: true, // ignored if replace == false,\n        // https://developer.mozilla.org/uk/docs/Web/JavaScript/Reference/Global_Objects/Function/prototype\n        ignore: {\n          protoProps: [\n            'constructor',\n            'apply',\n            'bind',\n            'call',\n            'isGenerator',\n            'toSource',\n            'toString',\n            '__proto__',\n          ],\n          staticProps: [\n            'arguments',\n            'arity',\n            'caller',\n            'length',\n            'name',\n            'displayName',\n            'prototype',\n            '__proto__',\n          ],\n        },\n      },\n    },\n  };\n\n  const CAPITAL_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\n  function parentHas(target, Interface) {\n    const prototype = getProto(target);\n    if (prototype === null) return false;\n    const interfaces = prototype.constructor.__interfaces_;\n    if (typeof interfaces !== 'undefined' && interfaces.has(Interface)) return true;\n    return parentHas(prototype, Interface);\n  }\n\n  // Base interface class\n  const InterfaceClass = class Interface {\n    constructor(properties) {\n      if (typeof properties.extends !== 'undefined' && !Array.isArray(properties.extends)) {\n        throw TypeError('Interface extends should be an Array');\n      }\n      if (typeof properties.name === 'string' && properties.name.length !== 0) {\n        const keys = Object.keys(properties);\n        let i = keys.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (i--) {\n          if (\n            CAPITAL_CHARS.indexOf(keys[i][0]) > -1 ||\n            keys[i] === 'name' ||\n            keys[i] === 'extends'\n          ) {\n            this[keys[i]] = properties[keys[i]];\n          } else {\n            throw Error('Interface optional property name should start with capital letter');\n          }\n        }\n      } else {\n        throw TypeError('Interface should have a name');\n      }\n    }\n\n    isInterfaceOf(object) {\n      // code repeating here, same as in parentHas()\n      // those solulution works faster than just using of parentHas()\n      // TODO: check in others environments\n      const prototype = getProto(object);\n      if (prototype === null) return false;\n      const interfaces = prototype.constructor.__interfaces_;\n      if (typeof interfaces !== 'undefined' && interfaces.has(this)) return true;\n      return parentHas(prototype, this);\n    }\n  };\n\n  // interf.create(), create Interface\n  function create(interfaceName, extendsArray) {\n    // no need in rest args (...args), also minimize code (babel will transform it\n    // to arguments anyway)\n    const ar = arguments;\n    if (typeof ar[0] === 'string') {\n      const obj = { name: ar[0] };\n      if (typeof ar[1] !== 'undefined') obj.extends = ar[1];\n      return new InterfaceClass(obj);\n    } else if (typeof ar[0] === 'object') {\n      return new InterfaceClass(ar[0]);\n    }\n    throw TypeError(\n      'In method interf.create first parameter should be an object or Interface name'\n    );\n  }\n\n  // Interfaces objects are stored in __interfaces_\n  class Interfaces {\n    constructor(version) {\n      this.collection = [];\n      this.VERSION = version;\n    }\n\n    // add only unique, but not unique in extends or parent\n    // mainly incoming parameter will be arguments object (array like)\n    add(interfaces, constructorName) {\n      const len = interfaces.length;\n      let i = -1;\n      while (++i < len) {\n        let j = this.collection.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (j--) {\n          if (this.collection[j] === interfaces[i]) {\n            throw Error(\n              `Class ${constructorName} cannot implement previously implemented interface ${interfaces[\n                i\n              ].name}`\n            );\n          }\n        }\n\n        this.collection.push(interfaces[i]);\n      }\n      return this;\n    }\n\n    remove(Interface) {\n      let i = this.collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === this.collection[i]) {\n          this.collection.splice(i, 1);\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // check instance interfaces\n    // comparison is fastest solution\n    has(Interface) {\n      let i = this.collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === this.collection[i]) return true;\n        // check extended interfaces\n        if (\n          typeof this.collection[i].extends === 'object' &&\n          this.extendsHas(Interface, this.collection[i].extends)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    extendsHas(Interface, collection) {\n      let i = collection.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        if (Interface === collection[i]) return true;\n        // check extended interfaces\n        if (\n          typeof collection[i].extends !== 'undefined' &&\n          this.extendsHas(Interface, collection[i].extends)\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  function configure(properties) {\n    this._config = assignObjects(this._config, properties);\n\n    // descriptor should be rewrited\n    if (typeof properties.descriptor === 'object') {\n      this._config.descriptor = properties.descriptor;\n    }\n\n    return this;\n  }\n\n  // debug information computing functions\n  let debugs = false;\n\n  // define __interfaces_ in prototype\n  function defineInterfacesProp(proto, parent, options) {\n    const value = new Interfaces(interf.version, parent);\n    const descriptor = assignObjects(options.descriptor); // assign to empty object {}\n\n    if (typeof interf._config.descriptor.set !== 'function') {\n      descriptor.value = value;\n    }\n\n    Object.defineProperty(proto.constructor, '__interfaces_', descriptor);\n    if (typeof descriptor.set === 'function') {\n      proto.constructor.__interfaces_ = value;\n    }\n\n    if (options.debug && debugs) debugs.define(true, proto, value);\n  }\n\n  function validateInterfaces(interfaces) {\n    let i = interfaces.length;\n    while (i--) {\n      if (typeof interfaces[i] !== 'object') {\n        throw TypeError(`Undefined type ${typeof interfaces[i]} of interface`);\n      } else if (typeof interfaces[i].isInterfaceOf !== 'function') {\n        throw TypeError(`Undefined type of interface: ${interfaces[i].name}`);\n      }\n    }\n  }\n\n  // implement interface function\n  function implementIn(prototype, interfaces, options) {\n    validateInterfaces(interfaces);\n\n    const constructor = prototype.constructor;\n\n    if (!hasProp.call(constructor, '__interfaces_')) {\n      defineInterfacesProp(prototype, null, options);\n    }\n\n    // add intefaces to prototype\n    constructor.__interfaces_.add(interfaces, constructor.name);\n\n    if (interf._config.afterImplement) {\n      interf._config.callbacks.afterImplement(constructor.__interfaces_, constructor, interfaces);\n    }\n\n    if (options.debug && debugs) debugs.implement(true, prototype, interfaces);\n\n    return constructor;\n  }\n\n  // remove function\n  function removeIn(prototype, interfaces, options) {\n    validateInterfaces(interfaces);\n\n    const constructor = prototype.constructor;\n    const missed = [];\n    const deleted = [];\n    let collection;\n    let success = false;\n    let interfaced = false;\n    if (hasProp.call(constructor, '__interfaces_')) {\n      collection = constructor.__interfaces_.collection;\n\n      let i = interfaces.length;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (i--) {\n        const index = collection.indexOf(interfaces[i]);\n        let warnMsg = '';\n\n        if (index > -1) {\n          if (constructor.__interfaces_.remove(interfaces[i])) {\n            deleted.push(interfaces[i]);\n\n            if (constructor.__interfaces_.has(interfaces[i])) {\n              warnMsg = `removed, but interface still exist in other interfaces parents.`;\n            }\n\n            if (parentHas(prototype, interfaces[i])) {\n              warnMsg += ` removed, but interface still exist in parents prototypes constructors interfaces.`;\n            }\n          } else {\n            warnMsg = `not removed from own interfaces.`;\n          }\n        } else {\n          warnMsg = `not found in own interfaces.`;\n\n          missed.push(interfaces[i]);\n        }\n\n        if (options.warn && warnMsg.length > 0) {\n          interf._config.callbacks.warn({\n            message: `Constructor ${constructor.name}. Interface ${interfaces[i]\n              .name} was ${warnMsg}`,\n          });\n        }\n      }\n\n      success = deleted.length === interfaces.length;\n\n      interfaced = true;\n    } else if (options.warn) {\n      interf._config.callbacks.warn({\n        message: `Constructor ${constructor.name} none interface was found. Interfaces ${addArray(\n          [],\n          interfaces\n        )\n          .map(Interface => Interface.name)\n          .join(', ')} was not removed from own interfaces.`,\n      });\n    }\n\n    if (options.debug && debugs) {\n      debugs.remove(success, prototype, interfaces, interfaced, deleted, missed);\n    }\n\n    return success;\n  }\n\n  // empty function\n  function emptyIn(prototype, options) {\n    const constructor = prototype.constructor;\n    let success = false;\n    let interfaced = false;\n    if (hasProp.call(constructor, '__interfaces_')) {\n      // create new array\n      const interfaces = addArray([], constructor.__interfaces_.collection);\n      if (interfaces.length !== 0) {\n        success = removeIn(prototype, interfaces, options);\n      }\n\n      interfaced = true;\n    }\n\n    if (options.debug && debugs) debugs.empty(success, prototype, null, interfaced);\n\n    return success;\n  }\n\n  // resolve input arguments\n  function resolveArgs(args, section) {\n    const ret = { values: args, options: {} };\n    let descriptor;\n    if (Array.isArray(args[0])) {\n      ret.values = args[0];\n      if (typeof args[1] === 'object') {\n        ret.options = args[1];\n        if (typeof ret.options.descriptor === 'object') {\n          descriptor = ret.options.descriptor;\n        }\n      }\n    }\n\n    if (typeof section === 'string') {\n      ret.options = assignObjects(interf._config, interf._config[section], ret.options);\n    } else {\n      ret.options = assignObjects(interf._config, ret.options);\n    }\n\n    // special rule for descriptor option\n    // descriptor should be rewrited\n    if (typeof descriptor !== 'undefined') {\n      ret.options.descriptor = descriptor;\n    }\n\n    return ret;\n  }\n\n  // get proto of given in \".in(target)\" method argument\n  function targetProto(target) {\n    if (typeof target === 'function') {\n      return target.prototype;\n    } else if (\n      // check is protolike object\n      typeof target.constructor === 'function' &&\n      target.constructor.prototype === target\n    ) {\n      return target;\n    }\n    throw TypeError(\n      `Wrong target, should be function (class) or prototype of function (class). Current value: ${target}.`\n    );\n  }\n\n  // interf.implement()\n  function implement() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments);\n    return {\n      in: target => implementIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // interf.remove()\n  function remove() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments);\n    return {\n      in: target => removeIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // interf.empty()\n  function empty(options) {\n    const opts = resolveArgs([[], options]).options;\n    return {\n      in: target => emptyIn(targetProto(target), opts),\n    };\n  }\n\n  // core\n  interf.create = create;\n  interf.implement = implement;\n  interf.remove = remove;\n  interf.empty = empty;\n  interf.configure = configure;\n  // core additional\n  interf.utils = {\n    getProto,\n    getSymbols,\n    addArray,\n    mergeObjects,\n    assignObjects,\n  };\n  interf.internal = {\n    Interface: InterfaceClass,\n    Interfaces,\n    implementIn,\n    removeIn,\n    emptyIn,\n    debugs,\n    resolveArgs,\n    targetProto,\n  };\n\n  // @NOT_CORE_BEGIN@\n\n  // Interface for objects mixined with classes with constructor method, and mark that initMixins method are able\n  const MixinsInitiable = create({\n    name: 'MixinsInitiable',\n    Comments: ['Class with this interface may init values provided by mixins'],\n    Methods: ['initMixins'],\n    StaticProperties: ['__mixins_: class[]'],\n    Docs: '//shvabuk.github.io/interf',\n  });\n\n  // class for getting debug information\n  class DebugInterfaces {\n    constructor(prototype) {\n      this.tree = [];\n      this.initTree(prototype);\n      this.list = [];\n      this.initList();\n    }\n\n    // use proto chain here because we need proto info, that may not provided by parent property\n    initTree(prototype) {\n      let proto = prototype;\n      while (true) {\n        if (proto === null) {\n          break;\n        }\n\n        if (hasProp.call(proto.constructor, '__interfaces_')) {\n          const interfs = proto.constructor.__interfaces_.collection;\n          this.tree.unshift({\n            constructorName: proto.constructor.name,\n            proto,\n            interfaces: interfs,\n          });\n        }\n\n        proto = getProto(proto);\n      }\n      return this.tree;\n    }\n\n    initList() {\n      const len = this.tree.length;\n      let i = -1;\n      // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n      while (++i < len) {\n        this.addInfo(\n          this.tree[i].proto,\n          this.tree[i].interfaces,\n          this.tree[i].constructorName,\n          false\n        );\n      }\n      return this.list;\n    }\n\n    addInfo(proto, collection, constructorName, extended) {\n      const len = collection.length;\n      let i = -1;\n      while (++i < len) {\n        const InterFace = collection[i];\n        const info = { constructorName, asExtendedInterface: extended, proto };\n        let result;\n        let j = this.list.length;\n        // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n        while (j--) {\n          if (this.list[j].interface === InterFace) {\n            result = this.list[j];\n            break;\n          }\n        }\n        if (typeof result === 'undefined') {\n          this.list.push({ interface: InterFace, implementedIn: [info] });\n        } else {\n          result.implementedIn.push(info);\n        }\n\n        if (typeof InterFace.extends !== 'undefined') {\n          this.addInfo(proto, InterFace.extends, constructorName, true);\n        }\n      }\n      return this.list;\n    }\n\n    getDuplicates() {\n      const results = [];\n\n      const len = this.list.length;\n      let i = -1;\n      while (++i < len) {\n        if (this.list[i].implementedIn.length > 1) results.push(this.list[i]);\n      }\n\n      return results;\n    }\n\n    getList() {\n      return this.list;\n    }\n\n    getTree() {\n      return this.tree;\n    }\n  }\n\n  debugs = {\n    define: (success, proto, value) => {\n      interf._config.callbacks.debug({\n        operation: 'define',\n        success,\n        message: `Constructor ${proto.constructor.name} prototype property __interfaces_ defined`,\n        value,\n        Constructor: proto.constructor,\n      });\n    },\n    implement: (success, proto, value) => {\n      const allInterfaces = new DebugInterfaces(proto).getList();\n      interf._config.callbacks.debug({\n        operation: 'implement',\n        success,\n        message: `Constructor ${proto.constructor\n          .name} implemented own interfaces: ${proto.constructor.__interfaces_.collection\n          .map(InterFace => InterFace.name)\n          .join(', ')}. All ${proto.constructor.name} interfaces: ${allInterfaces\n          .map(data => data.interface.name)\n          .join(', ')}`,\n        value,\n        allInterfaces,\n        Constructor: proto.constructor,\n      });\n    },\n    remove: (success, proto, interfs, interfaced, deleted, missed) => {\n      if (interfaced) {\n        const stillExist = [];\n        const interfacesList = new DebugInterfaces(proto).getList();\n        const listLen = interfacesList.length;\n        let i = -1;\n        while (++i < listLen) {\n          const len = interfs.length;\n          let j = -1;\n          while (++j < len) {\n            if (interfacesList[i].interface === interfs[j]) {\n              stillExist.push(interfacesList[i]);\n              break;\n            }\n          }\n        }\n\n        const data = {\n          operation: 'remove',\n          success,\n          message: `Constructor ${proto.constructor.name}.${(deleted.length > 0\n            ? ` Own interfaces: ${deleted.map(InterFace => InterFace.name).join(', ')} was deleted.`\n            : '') +\n            (missed.length > 0\n              ? ` Own interfaces: ${missed\n                  .map(InterFace => InterFace.name)\n                  .join(', ')} was not found in ${proto.constructor.name} interfaces collection.`\n              : '') +\n            (stillExist.length > 0\n              ? ` Interfaces: ${stillExist\n                  .map(listednterface => listednterface.interface.name)\n                  .join(', ')} still exist in parents constructor prototypes or parents interfaces.`\n              : '')}`,\n          value: interfs,\n          Constructor: proto.constructor,\n          deleted,\n          missed,\n          stillExist,\n          list: interfacesList,\n        };\n\n        interf._config.callbacks.debug(data);\n      } else {\n        interf._config.callbacks.debug({\n          operation: 'remove',\n          success,\n          message: `Constructor ${proto.constructor\n            .name} does not implement interf interfaces. Interface removing is not possible`,\n          value: interfs,\n          Constructor: proto.constructor,\n        });\n      }\n    },\n    empty: (success, proto, value, interfaced) => {\n      if (interfaced) {\n        interf._config.callbacks.debug({\n          operation: 'empty',\n          success,\n          message: `Constructor ${proto.constructor.name} empty ${success\n            ? ''\n            : 'not '}all own interfaces`,\n          value,\n          Constructor: proto.constructor,\n        });\n      } else {\n        interf._config.callbacks.debug({\n          operation: 'empty',\n          success: false,\n          message: `Constructor ${proto.constructor\n            .name} does not implement interf interfaces. Interface empty is not possible`,\n          value,\n          Constructor: proto.constructor,\n        });\n      }\n    },\n    mixProperties: (success, target, mixin, debugData) => {\n      const data = debugData;\n      const isPrototype = typeof target !== 'function';\n      data.success = success;\n      data.Constructor = isPrototype ? target.constructor : target;\n      data.message = `Constructor ${data.Constructor.name +\n        (isPrototype ? ' prototype' : '')} mixed with ${(isPrototype\n        ? mixin.constructor.name\n        : mixin.name) + (isPrototype ? ' prototype' : '')} properties.${data.notReplaced.length > 0\n        ? ` Not replaced properties: ${data.notReplaced.join(', ')}`\n        : ''}`;\n\n      data.value = mixin;\n      interf._config.callbacks.debug(data);\n    },\n  };\n\n  // get props names, used in mixin\n  function getOwnPropsKeys(target) {\n    return addArray(Object.getOwnPropertyNames(target), getSymbols(target));\n  }\n\n  function implementByMixIn(target, interfaces, options) {\n    const prototype = targetProto(target);\n    // create new array, transform arguments to array\n    const interfs = addArray([], interfaces);\n\n    let i = interfs.length;\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      // ignore duplicates\n      if (\n        hasProp.call(prototype.constructor, '__interfaces_') &&\n        prototype.constructor.__interfaces_.collection.indexOf(interfs[i]) > -1\n      ) {\n        interfs.splice(i, 1);\n      }\n    }\n\n    return implementIn(prototype, interfs, options);\n  }\n\n  // define mixin (constructor or prototype) properties\n  function defineProps(target, mixin, options, ignore) {\n    const mixinNames = getOwnPropsKeys(mixin);\n    const targetNames = getOwnPropsKeys(target);\n    const debugData = {\n      operation: 'mixProperties',\n      target,\n      mixin,\n      ignoredNames: [],\n      notReplaced: [],\n      replaced: [],\n      defined: [],\n      writed: [],\n    };\n\n    let i = mixinNames.length;\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      // ignore props from ignorelist\n      if (ignore.indexOf(mixinNames[i]) > -1) {\n        if (options.debug) debugData.ignoredNames.push(mixinNames[i]);\n        continue;\n      }\n      // implement interfaces\n      if (mixinNames[i] === '__interfaces_') {\n        if (options.interfaces) {\n          implementByMixIn(target, mixin.__interfaces_.collection, options);\n          if (options.debug) debugData.interfaces = mixin.__interfaces_.collection;\n        }\n        continue;\n      }\n\n      const descriptor = Object.getOwnPropertyDescriptor(mixin, mixinNames[i]);\n      // check prop name in target\n      if (targetNames.indexOf(mixinNames[i]) > -1) {\n        // add mixins constructors if exists\n        if (mixinNames[i] === '__mixins_') {\n          addArray(target.__mixins_, mixin.__mixins_);\n          if (options.debug) debugData.mixins = mixin.__mixins_;\n        } else {\n          const isProto = typeof target === 'object';\n\n          if (options.warn) {\n            interf._config.callbacks.warn({\n              message: `Target ${isProto\n                ? `${target.constructor.name} prototype`\n                : target.name} alredy have mixin (${isProto\n                ? `${mixin.constructor.name} prototype`\n                : mixin.name}) property \"${mixinNames[i]}\". Will be ${options.replace\n                ? 'replaced'\n                : 'ignored'}.`,\n            });\n          }\n\n          if (options.replace) {\n            // resolve conflicts\n            const targetDescriptor = Object.getOwnPropertyDescriptor(target, mixinNames[i]);\n            if (!targetDescriptor.configurable) {\n              if (targetDescriptor.writable) {\n                // write property\n                target[mixinNames[i]] = mixin[mixinNames[i]];\n                if (options.debug) debugData.writed.push(mixinNames[i]);\n              } else if (options.notConfigurableNotWritableError) {\n                try {\n                  // show some additional info\n                  console.error(\n                    'Trying to define not configurable and not writable value. Interf mixin debug info',\n                    debugData\n                  );\n                } catch (e) {}\n                // force error throwing\n                Object.defineProperty(target, mixinNames[i], descriptor);\n              } else {\n                // ignore if options.notConfigurableNotWritableError = false and targetDescriptor.configurable true\n                if (options.debug) debugData.notReplaced.push(mixinNames[i]);\n                if (options.warn) {\n                  interf._config.callbacks.warn({\n                    message: `Mixin ${isProto\n                      ? `${mixin.constructor.name} prototype`\n                      : mixin.name} property \"${mixinNames[\n                      i\n                    ]}\" ignored, because is not writable and not configurable`,\n                  });\n                }\n              }\n            } else {\n              // replace value\n              Object.defineProperty(target, mixinNames[i], descriptor);\n              if (options.debug) debugData.replaced.push(mixinNames[i]);\n            }\n          } else if (options.debug) {\n            // ignore if options.replace == false\n            debugData.notReplaced.push(mixinNames[i]);\n          }\n        }\n      } else {\n        // define property\n        Object.defineProperty(target, mixinNames[i], descriptor);\n        if (options.debug) debugData.defined.push(mixinNames[i]);\n      }\n    }\n\n    if (options.debug && debugs) debugs.mixProperties(true, target, mixin, debugData);\n  }\n\n  // return initMixins function, MixinsInitiable objects method\n  // may be used if interf._config.mixin.createInit or options.createInit is true\n  function createInitMixins(replace) {\n    return function initMixins() {\n      // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n      let prototype = getProto(this);\n      while (true) {\n        if (prototype === null) {\n          break;\n        }\n\n        if (hasProp.call(prototype.constructor, '__mixins_')) {\n          const length = prototype.constructor.__mixins_.length;\n          let j = -1;\n          while (++j < length) {\n            // const mixinObject = new prototype.constructor.__mixins_[j](...args);\n            // compiled by babel\n            const mixinObject = new (Function.prototype.bind.apply(\n              prototype.constructor.__mixins_[j],\n              addArray([null], arguments)\n            ))();\n            const keys = Object.keys(mixinObject);\n            let i = keys.length;\n            // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n            while (i--) {\n              if (typeof this[keys[i]] === 'undefined' || replace) {\n                this[keys[i]] = mixinObject[keys[i]];\n              }\n            }\n          }\n        }\n\n        prototype = getProto(prototype);\n      }\n    };\n  }\n\n  // mixin function\n  function mixIn(targetPrototype, mixins, options) {\n    const mixinsConstructors = [];\n    const len = mixins.length;\n    let i = -1;\n    while (++i < len) {\n      const mixinProto = targetProto(mixins[i]);\n      defineProps(targetPrototype, mixinProto, options, options.ignore.protoProps);\n      defineProps(\n        targetPrototype.constructor,\n        mixinProto.constructor,\n        options,\n        options.ignore.staticProps\n      );\n      if (options.createInit) mixinsConstructors.push(mixinProto.constructor);\n    }\n\n    if (options.createInit) {\n      if (\n        typeof targetPrototype.__interfaces_ === 'undefined' ||\n        !targetPrototype.__interfaces_.has(MixinsInitiable)\n      ) {\n        Object.defineProperty(targetPrototype, 'initMixins', {\n          configurable: true,\n          writable: true,\n          value: createInitMixins(!!options.replace), // always convert replace to primitive\n        });\n\n        if (\n          typeof targetPrototype.constructor.__interfaces_ !== 'object' ||\n          targetPrototype.constructor.__interfaces_.collection.indexOf(MixinsInitiable) === -1\n        ) {\n          implement(MixinsInitiable).in(targetPrototype);\n        }\n      }\n\n      if (hasProp.call(targetPrototype.constructor, '__mixins_')) {\n        addArray(targetPrototype.constructor.__mixins_, mixinsConstructors);\n      } else {\n        Object.defineProperty(targetPrototype.constructor, '__mixins_', {\n          configurable: true,\n          writable: true,\n          value: mixinsConstructors,\n        });\n      }\n    }\n\n    return targetPrototype.constructor;\n  }\n\n  // debug function\n  function debugIn(prototype, actions) {\n    const information = {};\n    let i = actions.length;\n    const debugInfo = new DebugInterfaces(prototype);\n\n    // while(i--) loop faster than any array buildin loops [].map(), [].find() etc.\n    while (i--) {\n      if (actions[i] === 'duplicates') {\n        information.duplicates = debugInfo.getDuplicates();\n      } else if (actions[i] === 'tree') {\n        information.tree = debugInfo.getTree();\n      } else if (actions[i] === 'list') {\n        information.list = debugInfo.getList();\n      }\n    }\n\n    return information;\n  }\n\n  // interf.debug() resolve given arguments and run debug\n  function debug(action) {\n    const allActions = ['duplicates', 'tree', 'list'];\n    let values;\n    if (typeof action === 'undefined') {\n      values = allActions;\n    } else if (typeof action === 'string') {\n      if (action === 'all') {\n        values = allActions;\n      } else {\n        values = [action];\n      }\n    } else if (Array.isArray(action)) {\n      values = action;\n    } else {\n      throw TypeError(\n        `debug first argument should be undefined, array, or string (${allActions.join(', ')}, all)`\n      );\n    }\n\n    return {\n      in: target => debugIn(targetProto(target), values),\n    };\n  }\n\n  // interf.mix()\n  function mix() {\n    // no need in rest args (...args), also minimize code (babel will transform it to arguments anyway)\n    const args = resolveArgs(arguments, 'mixin');\n\n    return {\n      in: target => mixIn(targetProto(target), args.values, args.options),\n    };\n  }\n\n  // full\n  interf.mix = mix;\n  interf.debug = debug;\n  // additional\n  interf.interfaces = { MixinsInitiable };\n  interf.internal.DebugInterfaces = DebugInterfaces;\n  interf.internal.mixIn = mixIn;\n  interf.internal.debugIn = debugIn;\n  interf.internal.debugs = debugs;\n\n  // @NOT_CORE_END@\n\n  return interf;\n});\n"]}